name: Salesforce Deployment
on:
  push:
    branches:
      - master

env:
  SF_AUTOUPDATE_DISABLE: true
  SF_USE_GENERIC_UNIX_KEYCHAIN: true

jobs:
  Salesforce_Deployment:
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 200
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16' # Ensure compatible Node.js version

      - name: Install Salesforce CLI
        run: |
          echo "Installing Salesforce CLI..."
          npm install -g @salesforce/cli

      - name: Authorize SF Org
        run: |
          echo "Authenticating with Salesforce..."
          sf login org jwt --username "${{ secrets.SALESFORCEPRODUSERNAME }}" --client-id "${{ secrets.SALESFORCEPRODCLIENTID }}" --jwt-key-file ./assets/server.key --instance-url "${{ secrets.SALESFORCEPRODINSTANCEURL }}"

      - name: Validate and Deploy Salesforce Project
        run: |
          echo "Starting Salesforce project validation..."
          validationResult=$(sf deploy metadata validate --manifest ./manifest/package.xml --target-org "${{ secrets.SALESFORCEPRODUSERNAME }}" --json)
          echo "Raw Validation Result:"
          echo $validationResult | jq '.'  # Pretty print the JSON

          jobId=$(echo $validationResult | jq -r ".result.id")
          if [ -z "$jobId" ]; then
              echo "Unexpected result from validation initiation."
              exit 1
          fi

          isComplete="false"
          while [ "$isComplete" == "false" ]; do
              sleep 10
              statusResult=$(sf deploy metadata report --job-id $jobId --json)
              isComplete=$(echo $statusResult | jq -r ".result.done")
              status=$(echo $statusResult | jq -r ".result.status")
              echo "Validation Status: $status"
              
              if [ "$status" == "null" ]; then
                  echo "Error: Unexpected null status from Salesforce CLI."
                  echo $statusResult | jq '.'
                  exit 1
              fi
          done

          if [ "$status" != "Succeeded" ]; then
              echo "Error: Validation failed with status: $status"
              echo $statusResult | jq -r ".result.details.componentFailures" | jq '.'
              exit 1
          fi

          echo "Deploying Salesforce project..."
          deploymentResult=$(sf deploy metadata --manifest ./manifest/package.xml --target-org "${{ secrets.SALESFORCEPRODUSERNAME }}" --json)
          deploymentStatus=$(echo $deploymentResult | jq -r ".result.status")

          if [ "$deploymentStatus" == "null" ]; then
              echo "Error: Unexpected null status from Salesforce CLI during deployment."
              echo $deploymentResult | jq '.'
              exit 1
          elif [ "$deploymentStatus" != "Succeeded" ]; then
              echo "Error: Deployment failed with status: $deploymentStatus"
              echo $deploymentResult | jq -r ".result.details.componentFailures" | jq '.'
              exit 1
          fi

          echo "Deployment Status: $deploymentStatus"
          echo "Deployment complete."
